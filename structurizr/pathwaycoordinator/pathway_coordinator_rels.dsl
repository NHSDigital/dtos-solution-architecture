pathwayCoordinator -> participantManager "Manages participant's episode (appointments, closed episodes) using"
pathwayCoordinator -> appointmentAllocator "Gets slot for participant using"
pathwayCoordinator -> screeningEventManager "Executes clinical investigation using"
pathwayCoordinator -> communicationsManager "Send appointment with pathway definition"
pathwayCoordinator -> participantManager "Update episodes with appointment statuses"
pathwayCoordinator -> appointmentBooker "Update appointment invitation status"
s -> pathwayCoordinator "Manages Pathway definitions using"
        
pathwayCoordinator.participantEventHandler -> pathwayCoordinator.participantEventsQueue "Subscribes to messages from"
pathwayCoordinator.participantEventHandler -> pathwayCoordinator.inbound_API "Accesses pathway definition using"
pathwayCoordinator.participantEventHandler -> pathwayCoordinator.productEventsQueue "Communicates with the products using"
pathwayCoordinator.contextManager_ParticipantEventHandler -> pathwayCoordinator.participantEventsQueue "Subscribes to messages from"
pathwayCoordinator.contextManager_ParticipantEventHandler -> pathwayCoordinator.contextManager_API "Updates data using"
pathwayCoordinator.API -> pathwayCoordinator.db "Accesses data from"
pathwayCoordinator.contextManager_API -> pathwayCoordinator.contextManager_database "Accesses data from"
pathwayCoordinator.contextManager_internalWebapp -> pathwayCoordinator.contextManager_API "Displays data using"
pathwayCoordinator.internalWebapp -> pathwayCoordinator.pathwayManager_API "Displays data using"
st -> pathwayCoordinator.internalWebapp "Interacts with participant screening history using"
nhsCIS2 -> pathwayCoordinator.internalWebapp "Logs on via"
pathwayCoordinator.pathwayManager_API -> nhsCIS2 "Protects API using"
st -> pathwayCoordinator.contextManager_internalWebapp "Interacts with participant screening history using"
nhsCIS2 -> pathwayCoordinator.contextManager_internalWebapp "Logs on via"
pathwayCoordinator.contextManager_API -> nhsCIS2 "Protects API using"
pathwayCoordinator.inbound_API -> pathwayCoordinator.inbound_API "Retrieves schema information using"
pathwayCoordinator.inbound_API -> pathwayCoordinator.participantEventsQueue "Adds validated messages to"
pathwayCoordinator.productEventsQueue -> participantManager.productEventHandler "Publishes messages to"
pathwayCoordinator.productEventsQueue -> communicationsManager.API "Send participant comms event with pathway definition"